name: PR Commit Checker

on:
  pull_request:
    branches:
      - master

jobs:
  check-commits:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch tags
        run: git fetch --tags

      - name: Get current and previous tags
        id: get-tags
        run: |
          current_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          previous_tag=$(git describe --tags $(git rev-list --tags --skip=1 --max-count=1))
          echo "current_tag=$current_tag" >> $GITHUB_ENV
          echo "previous_tag=$previous_tag" >> $GITHUB_ENV
          echo "::set-output name=current::$current_tag"
          echo "::set-output name=previous::$previous_tag"

      - name: Get commits between tags
        id: get-commits
        run: |
          if [ -z "$previous_tag" ]; then
            echo "No previous tag found."
            echo "::set-output name=found::false"
          else
            commits=$(git log $previous_tag..$current_tag --oneline | grep '^feat(backend')
            if [ -n "$commits" ]; then
              echo "Found matching commits."
              echo "::set-output name=found::true"
              echo "::set-output name=commits::$commits"
            else
              echo "No matching commits found."
              echo "::set-output name=found::false"
            fi
          fi

      - name: Comment on PR
        if: steps.get-commits.outputs.found == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const { github, context } = require('@actions/github');
            const prNumber = context.payload.pull_request.number;
            const commits = `${{ steps.get-commits.outputs.commits }}`;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: `Found the following commits with 'feat(backend':\n${commits}`
            });

      - name: Comment no commits found
        if: steps.get-commits.outputs.found == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            const { github, context } = require('@actions/github');
            const prNumber = context.payload.pull_request.number;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: "No commits with 'feat(backend' found between the latest two tags."
            });
